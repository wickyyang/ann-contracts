package test

import (
	"encoding/json"
	"fmt"
	"math/big"
	"strings"
	"testing"

	"github.com/stretchr/testify/assert"

	cmn "github.com/dappledger/AnnChain/cmd/client/commands"
	"github.com/dappledger/AnnChain/eth/accounts/abi"
	"github.com/dappledger/AnnChain/eth/params"
	. "github.com/dappledger/ann-contracts/evm/client"
	. "github.com/dappledger/ann-contracts/evm/vm"
)

const (
	//SenderPirvKey        = "b35ad70bfa2a220f3a8e6615d095e5334b64624a479189f7e63ad26cd7405f43"
	SenderAddr         = "0x4cc66cbe430de77a91a8499de7c6e640a3ddb6c7"
	conMethod          = "call"
	byteCode           = "608060405234801561001057600080fd5b506104bf806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063b02bd3cb14610030575b600080fd5b6102216004803603608081101561004657600080fd5b810190808035906020019064010000000081111561006357600080fd5b82018360208201111561007557600080fd5b8035906020019184600183028401116401000000008311171561009757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156100fa57600080fd5b82018360208201111561010c57600080fd5b8035906020019184600183028401116401000000008311171561012e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561019157600080fd5b8201836020820111156101a357600080fd5b803590602001918460018302840111640100000000831117156101c557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919050505061041a565b60405180806020018060200180602001878152602001806020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200185810385528b818151815260200191508051906020019080838360005b838110156102a557808201518184015260208101905061028a565b50505050905090810190601f1680156102d25780820380516001836020036101000a031916815260200191505b5085810384528a818151815260200191508051906020019080838360005b8381101561030b5780820151818401526020810190506102f0565b50505050905090810190601f1680156103385780820380516001836020036101000a031916815260200191505b50858103835289818151815260200191508051906020019080838360005b83811015610371578082015181840152602081019050610356565b50505050905090810190601f16801561039e5780820380516001836020036101000a031916815260200191505b50858103825287818151815260200191508051906020019080838360005b838110156103d75780820151818401526020810190506103bc565b50505050905090810190601f1680156104045780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390f35b60608060606000606060008060018801905060606040518060400160405280600d81526020017f796f75206172652072696768740000000000000000000000000000000000000081525090508b8b8b8484338090509750975097509750975097505050949993985094509450945056fea265627a7a723158204c0d82548f301fbb1e8c89a704981b0aa6a07f8ae4b7a388f1f037f6cb9818dd64736f6c634300050b0032"
	EVMGasLimit uint64 = 100000000
)

var inputData = []interface{}{"id", "name", "phoneNo", 168}

var evmConfig = Config{EVMGasLimit: EVMGasLimit}

func TestCreateCon(t *testing.T) {
	evm := NewEVM(Context{}, nil, params.MainnetChainConfig, evmConfig)

	sender := AccountRef(StringToAddr(SenderAddr))

	abiJson, err := abi.JSON(strings.NewReader(conAbi))
	assert.Nil(t, err)
	data, err := CreateContractData(abiJson, byteCode, nil)
	assert.Nil(t, err)
	_, conAddr, _, err := evm.Create(sender, data, 0, big.NewInt(0))
	assert.Nil(t, err)

	fmt.Println("contract address:", conAddr.String())
}

func TestCallCon(t *testing.T) {
	evm := NewEVM(Context{}, nil, params.MainnetChainConfig, evmConfig)

	sender := AccountRef(StringToAddr(SenderAddr))

	abiJson, err := abi.JSON(strings.NewReader(conAbi))
	assert.Nil(t, err)
	data, err := CreateContractData(abiJson, byteCode, nil)
	assert.Nil(t, err)
	conCode, conAddr, _, err := evm.Create(sender, data, 0, big.NewInt(0))
	assert.Nil(t, err)

	input, err := CallContractData(abiJson, conMethod, inputData)
	assert.Nil(t, err)

	res, _, err := evm.Call(sender, conAddr, input, conCode, 0, big.NewInt(0))
	assert.Nil(t, err)

	abiRes, err := abi.JSON(strings.NewReader(conAbi))
	assert.Nil(t, err)

	parseResult, err := cmn.UnpackResult(conMethod, abiRes, string(res))
	assert.Nil(t, err)
	responseJSON, err := json.Marshal(parseResult)
	assert.Nil(t, err)
	fmt.Println("result:", string(responseJSON))
}
